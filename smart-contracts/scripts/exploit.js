const hre = require("hardhat");

async function main() {
    const [deployer, attacker] = await hre.ethers.getSigners();
    const Vulnerable = await hre.ethers.getContractFactory("Vulnerable", deployer);
    const Attacker = await hre.ethers.getContractFactory("Attacker", attacker);

    // deploy vulnerable contract
    const vul = await Vulnerable.deploy();
    console.log('Vulnerable contract deployed at: ${vul.target}');

    // deploy attacker contract
    const attackerContract = await Attacker.deploy(vul.target);
    await attackerContract.waitForDeployment();
    console.log('Attacker contract deployed at: ${attackerContract.target}');

    // Send 10 ETH to the vulnerable contract from the deployer
    const tx = await deployer.sendTransaction({
        to: vul.target,
        value: hre.ethers.parseEther("10")
    });
    await tx.wait();
    console.log("Funded 10 ETH to vulnerable contract");

    const provider = hre.ethers.provider;
    const vulBalanceBefore = await provider.getBalance(vul.target)
    const attBalanceBefore = await provider.getBalance(attacker.address);

    console.log("Before attack:");
    console.log("Vulnerable balance:", hre.ethers.formatEther(vulBalanceBefore), "ETH");
    console.log("Attacker Balance:", hre.ethers.formatEther(attBalanceBefore), "ETH");

    const attackTx = await attackerContract.connect(attacker).attack({
        value: hre.ethers.parseEther("1")
    });
    await attackTx.wait();
    console.log("Attacked!");

    const vulBalanceAfter = await provider.getBalance(vul.target)
    const attBalanceAfter = await provider.getBalance(attacker.address);

    console.log("After attack:");
    console.log("Vulnerable balance:", hre.ethers.formatEther(vulBalanceAfter), "ETH");
    console.log("Attacker Balance:", hre.ethers.formatEther(attBalanceAfter), "ETH");
}

main().catch((error) => {
    console.error(error);
    process.exitCode = 1;
});